/*You run a theme park and have 2 queues, one is general admission, one is priority pass, 
how do you process both queues so one is faster than the other but fair?*/
 
#include <iostream>
#include <queue>
using namespace std;
/* run this program using the console pauser or add your own getch, system("pause") or input loop */
 
int main(int argc, char** argv) {
	
	std::queue<int> gen, pp;
	
	int i = 0, count = 0;
	
	for(;i<100;i++) {
	gen.push(i);
	pp.push(i);
	count++;
	}
	cout << "Amount of iterations for inputting: " << count << endl;
 	
	while(gen.size() != 0 || pp.size() != 0 ) {
	if(i%4==0) {
	gen.pop();
	gen.pop();
	gen.pop();
	gen.pop();
	pp.pop(); 
	} //for every fourth iteration, allow four gen admissions and one priority to come through
	else {
	pp.pop();
	pp.pop();
	pp.pop();
	pp.pop();
	gen.pop();
	} //ratio is 13:7, about 1.87 speed
	if(gen.size() ==0) {
		while(pp.size() != 0) {
		pp.pop();
		}
	}
	if(pp.size() == 0) {
		while(gen.size() !=0) {
		gen.pop();
		}
	}
	i++;
	count++;
	}
	cout << "Amount of iterations for processing: " << count << endl;
	cout << "Gen size: " << gen.size() << "PP size: " << pp.size() << endl;
	
	return 0;
}
